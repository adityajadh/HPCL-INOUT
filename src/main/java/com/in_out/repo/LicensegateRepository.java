package com.in_out.repo;import com.in_out.model.Licensegate;import java.util.Date;import java.util.List;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.data.jpa.repository.Query;import org.springframework.data.repository.query.Param;import org.springframework.stereotype.Repository;@Repositorypublic interface LicensegateRepository extends JpaRepository<Licensegate, Long> {  @Query("SELECT li FROM Licensegate li WHERE li.aadharNumber = :aadharNumber ORDER BY li.entryDateTime DESC LIMIT 1")  Licensegate findByAadharNumber(@Param("aadharNumber") String paramString);    @Query("SELECT li FROM Licensegate li WHERE li.entryDateTime IS NOT NULL AND li.exitDateTime IS NULL AND li.entryDateTime >= :startDateTime AND li.entryDateTime < :endDateTime AND (li.details LIKE 'OFC/HPNSK/%' OR li.details LIKE 'EMP/HPNSK/%' OR li.details LIKE 'GAT/HPNSK/%' OR li.details LIKE 'TAT/HPNSK/%' OR li.details LIKE 'FEG/HPNSK/%' OR li.details LIKE 'SEC/HPNSK/%' OR li.details LIKE 'CON/HPNSK/%' OR li.details LIKE 'CONW/HPNSK/%')")  List<Licensegate> findByEntryDateTimeBetweenOrderByDetailsForOperation(@Param("startDateTime") Date paramDate1, @Param("endDateTime") Date paramDate2);    @Query("SELECT COUNT(li) FROM Licensegate li WHERE li.entryDateTime IS NOT NULL AND li.exitDateTime IS NULL AND li.entryDateTime >= :startDateTime AND li.entryDateTime < :endDateTime AND (li.details LIKE 'OFC/HPNSK/%' OR li.details LIKE 'EMP/HPNSK/%' OR li.details LIKE 'GAT/HPNSK/%' OR li.details LIKE 'TAT/HPNSK/%' OR li.details LIKE 'FEG/HPNSK/%' OR li.details LIKE 'SEC/HPNSK/%' OR li.details LIKE 'CON/HPNSK/%' OR li.details LIKE 'CONW/HPNSK/%')")  Long countByEntryDateTimeBetweenForOperation(@Param("startDateTime") Date paramDate1, @Param("endDateTime") Date paramDate2);    @Query("SELECT li FROM Licensegate li WHERE li.entryDateTime IS NOT NULL AND li.exitDateTime IS NULL AND li.entryDateTime >= :startDateTime AND li.entryDateTime < :endDateTime AND (li.details LIKE 'PT/HPNSK/%' OR li.details LIKE 'BK/HPNSK/%' OR li.details LIKE 'TR/HPNSK/%')")  List<Licensegate> findByEntryDateTimeBetweenOrderByDetails(@Param("startDateTime") Date paramDate1, @Param("endDateTime") Date paramDate2);    @Query("SELECT COUNT(li) FROM Licensegate li WHERE li.entryDateTime IS NOT NULL AND li.exitDateTime IS NULL AND li.entryDateTime >= :startDateTime AND li.entryDateTime < :endDateTime AND (li.details LIKE 'PT/HPNSK/%' OR li.details LIKE 'BK/HPNSK/%' OR li.details LIKE 'TR/HPNSK/%')")  Long countByEntryDateTimeBetween(@Param("startDateTime") Date paramDate1, @Param("endDateTime") Date paramDate2);    @Query("SELECT li FROM Licensegate li WHERE li.entryDateTime IS NOT NULL AND li.exitDateTime IS NULL AND li.entryDateTime >= :startDateTime AND li.entryDateTime < :endDateTime AND (li.details LIKE 'PW/HPNSK/%' OR li.details LIKE 'AMC/HPNSK/%')")  List<Licensegate> findByEntryDateTimeBetweenOrderByDetailsForProject(@Param("startDateTime") Date paramDate1, @Param("endDateTime") Date paramDate2);    @Query("SELECT COUNT(li) FROM Licensegate li WHERE li.entryDateTime IS NOT NULL AND li.exitDateTime IS NULL AND li.entryDateTime >= :startDateTime AND li.entryDateTime < :endDateTime AND (li.details LIKE 'PW/HPNSK/%' OR li.details LIKE 'AMC/HPNSK/%')")  Long countByEntryDateTimeBetweenForProject(@Param("startDateTime") Date paramDate1, @Param("endDateTime") Date paramDate2);    @Query("SELECT li FROM Licensegate li WHERE li.entryDateTime IS NOT NULL AND li.exitDateTime IS NULL AND li.entryDateTime >= :startDateTime AND li.entryDateTime < :endDateTime AND (li.details LIKE 'VS/HPNSK/%')")  List<Licensegate> findByEntryDateTimeBetweenOrderByDetailsForVisitor(@Param("startDateTime") Date paramDate1, @Param("endDateTime") Date paramDate2);    @Query("SELECT COUNT(li) FROM Licensegate li WHERE li.entryDateTime IS NOT NULL AND li.exitDateTime IS NULL AND li.entryDateTime >= :startDateTime AND li.entryDateTime < :endDateTime AND (li.details LIKE 'VS/HPNSK/%')")  Long countByEntryDateTimeBetweenForVisitor(@Param("startDateTime") Date paramDate1, @Param("endDateTime") Date paramDate2);    List<Licensegate> findByEntryDateTimeBetweenAndDepartmentOrderByDetails(Date paramDate1, Date paramDate2, String paramString);    List<Licensegate> findByExitDateTimeIsNull();}