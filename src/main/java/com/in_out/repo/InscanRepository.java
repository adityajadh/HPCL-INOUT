package com.in_out.repo;import com.in_out.model.Inscan;import java.util.Date;import java.util.List;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.data.jpa.repository.Query;import org.springframework.data.repository.query.Param;public interface InscanRepository extends JpaRepository<Inscan, Long> {  @Query("SELECT i FROM Inscan i WHERE i.aadharNumber = :aadharNumber ORDER BY i.entryDateTime DESC LIMIT 1")  Inscan findByAadharNumber(@Param("aadharNumber") String paramString);    Inscan findByAadharNumberAndExitDateTimeIsNull(String paramString);    @Query("SELECT i FROM Inscan i WHERE i.aadharNumber = :aadharNumber AND (:exitDateTime IS NULL OR i.exitDateTime = :exitDateTime)")  Inscan findByAadharNumberExitDateTime(@Param("aadharNumber") String paramString, @Param("exitDateTime") Date paramDate);    @Query("SELECT i FROM Inscan i WHERE i.entryDateTime IS NOT NULL AND i.exitDateTime IS NULL And i.entryDateTime >= :startDateTime AND i.entryDateTime < :endDateTime AND (i.details LIKE 'OFC/HPNSK/%' OR i.details LIKE 'EMP/HPNSK/%' OR i.details LIKE 'GAT/HPNSK/%' OR i.details LIKE 'TAT/HPNSK/%' OR i.details LIKE 'FEG/HPNSK/%' OR i.details LIKE 'SEC/HPNSK/%' OR i.details LIKE 'CON/HPNSK/%' OR i.details LIKE 'CONW/HPNSK/%')")  List<Inscan> findByEntryDateTimeBetweenOrderByDetailsForOperation(@Param("startDateTime") Date paramDate1, @Param("endDateTime") Date paramDate2);    @Query("SELECT COUNT(i) FROM Inscan i WHERE i.entryDateTime IS NOT NULL AND i.exitDateTime IS NULL AND i.entryDateTime >= :startDateTime AND i.entryDateTime < :endDateTime AND (i.details LIKE 'OFC/HPNSK/%' OR i.details LIKE 'EMP/HPNSK/%' OR i.details LIKE 'GAT/HPNSK/%' OR i.details LIKE 'TAT/HPNSK/%' OR i.details LIKE 'FEG/HPNSK/%' OR i.details LIKE 'SEC/HPNSK/%' OR i.details LIKE 'CON/HPNSK/%' OR i.details LIKE 'CONW/HPNSK/%')")  Long countByEntryDateTimeBetweenForOperation(@Param("startDateTime") Date paramDate1, @Param("endDateTime") Date paramDate2);    @Query("SELECT i FROM Inscan i WHERE i.entryDateTime IS NOT NULL AND i.exitDateTime IS NULL And i.entryDateTime >= :startDateTime AND i.entryDateTime < :endDateTime AND (i.details LIKE 'PT/HPNSK/%' OR i.details LIKE 'BK/HPNSK/%' OR i.details LIKE 'TR/HPNSK/%')")  List<Inscan> findByEntryDateTimeBetweenOrderByDetails(@Param("startDateTime") Date paramDate1, @Param("endDateTime") Date paramDate2);    @Query("SELECT COUNT(i) FROM Inscan i WHERE i.entryDateTime IS NOT NULL AND i.exitDateTime IS NULL AND i.entryDateTime >= :startDateTime AND i.entryDateTime < :endDateTime AND (i.details LIKE 'PT/HPNSK/%' OR i.details LIKE 'BK/HPNSK/%' OR i.details LIKE 'TR/HPNSK/%')")  Long countByEntryDateTimeBetween(@Param("startDateTime") Date paramDate1, @Param("endDateTime") Date paramDate2);    @Query("SELECT i FROM Inscan i WHERE i.entryDateTime IS NOT NULL AND i.exitDateTime IS NULL And i.entryDateTime >= :startDateTime AND i.entryDateTime < :endDateTime AND (i.details LIKE 'PW/HPNSK/%' OR i.details LIKE 'AMC/HPNSK/%')")  List<Inscan> findByEntryDateTimeBetweenOrderByDetailsForProject(@Param("startDateTime") Date paramDate1, @Param("endDateTime")  Date paramDate2);    @Query("SELECT COUNT(i) FROM Inscan i WHERE i.entryDateTime IS NOT NULL AND i.exitDateTime IS NULL AND i.entryDateTime >= :startDateTime AND i.entryDateTime < :endDateTime AND (i.details LIKE 'PW/HPNSK/%' OR i.details LIKE 'AMC/HPNSK/%')")  Long countByEntryDateTimeBetweenForProject(@Param("startDateTime") Date paramDate1, @Param("endDateTime") Date paramDate2);    @Query("SELECT i FROM Inscan i WHERE i.entryDateTime IS NOT NULL AND i.exitDateTime IS NULL And i.entryDateTime >= :startDateTime AND i.entryDateTime < :endDateTime AND (i.details LIKE 'VS/HPNSK/%')")  List<Inscan> findByEntryDateTimeBetweenOrderByDetailsForVisitor(@Param("startDateTime") Date paramDate1, @Param("endDateTime") Date paramDate2);    @Query("SELECT COUNT(i) FROM Inscan i WHERE i.entryDateTime IS NOT NULL AND i.exitDateTime IS NULL AND i.entryDateTime >= :startDateTime AND i.entryDateTime < :endDateTime AND (i.details LIKE 'VS/HPNSK/%')")  Long countByEntryDateTimeBetweenForVisitor(@Param("startDateTime") Date paramDate1, @Param("endDateTime") Date paramDate2);    List<Inscan> findByEntryDateTimeBetweenAndDepartmentAndNameContainingIgnoreCaseOrderByDetails(Date paramDate1, Date paramDate2, String paramString1, String paramString2);    List<Inscan> findByEntryDateTimeBetweenAndDepartmentAndSubDepartmentAndNameContainingIgnoreCaseOrderByDetails(Date paramDate1, Date paramDate2, String paramString1, String paramString2, String paramString3);    @Query(value = "SELECT * FROM inscan WHERE :query", nativeQuery = true)  List<Inscan> findByCustomQuery(@Param("query") String paramString);    List<Inscan> findByEntryDateTimeBetweenAndDepartmentOrderByDetails(Date paramDate1, Date paramDate2, String paramString);    List<Inscan> findByEntryDateTimeBetweenAndDepartmentAndSubDepartmentOrderByDetails(Date paramDate1, Date paramDate2, String paramString1, String paramString2);    @Query("SELECT i.mainGateSatus FROM Inscan i WHERE i.ofcid =:ofcid   AND i.subDepartment =:subDepartment   AND i.mainGateSatus = 'N'   AND i.exitDateTime IS NULL ORDER BY i.entryDateTime DESC LIMIT 1 ")  String findBySubDepartmentAndExitDateTimeAndMainGateStatus(@Param("ofcid")  Long paramLong,@Param("subDepartment")  String paramString);    List<Inscan> findByExitDateTimeIsNull();}